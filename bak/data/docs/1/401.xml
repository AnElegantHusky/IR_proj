<?xml version='1.0' encoding='utf-8'?>
<doc><id>401</id><url>https://docs.python.org/zh-cn/3/using/unix.html</url><title>在类Unix环境下使用Python</title><body>Python预装在大多数Linux发行版上，并作为一个包提供给所有其他用户。 但是，您可能想要使用的某些功能在发行版提供的软件包中不可用。这时您可以从源代码轻松编译最新版本的Python。
如果Python没有预先安装并且不在发行版提供的库中，您可以轻松地为自己使用的发行版创建包。 参阅以下链接：
参见
对于Debian用户
对于OpenSuse用户
对于Fedora用户
对于Slackware用户
FreeBSD用户，使用以下命令添加包:
OpenBSD用户，使用以下命令添加包:
例如：i386用户获取Python 2.5.1的可用版本:
你可以从 OpenCSW 获取、安装及使用各种版本的Python。比如 pkgutil -i python27 。
如果你想自己编译CPython，首先要做的是获取 source 。您可以下载最新版本的源代码，也可以直接提取最新的 clone 。 （如果你想要制作补丁，则需要克隆代码。）
构建过程由常用命令组成：
特定Unix平台的配置选项和注意事项通常记录在Python源代码的根目录下的 README.rst 文件中。
警告
make install 可以覆盖或伪装 python3 二进制文件。因此，建议使用 make altinstall 而不是 make install ，因为后者只安装了 exec_prefix/bin/pythonversion 。
这取决于本地安装惯例； prefix （ ${prefix} ）和 exec_prefix （ ${exec_prefix} ）  取决于安装，应解释为GNU软件；它们可能相同。
例如，在大多数Linux系统上，两者的默认值是 /usr 。
文件/目录
含义
exec_prefix/bin/python3
解释器的推荐位置
prefix/lib/pythonversion,
exec_prefix/lib/pythonversion
包含标准模块的目录的推荐位置
prefix/include/pythonversion,
exec_prefix/include/pythonversion
包含开发Python扩展和嵌入解释器所需的include文件的目录的推荐位置
要在Unix上使用Python脚本，需要添加可执行权限，例如：
并在脚本的顶部放置一个合适的Shebang线。一个很好的选择通常是:
将在整个 PATH 中搜索Python解释器。但是，某些Unix系统可能没有 env 命令，因此可能需要将 /usr/bin/python3 硬编码为解释器路径。
要在Python脚本中使用shell命令，请查看 subprocess 模块。
1. 命令行与环境
3. 在Windows上使用 Python
</body></doc>