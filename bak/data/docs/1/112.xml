<?xml version='1.0' encoding='utf-8'?>
<doc><id>112</id><url>https://docs.python.org/zh-cn/3/library/xmlrpc.server.html</url><title> --- Basic XML-RPC servers</title><body>Source code: Lib/xmlrpc/server.py
The xmlrpc.server module provides a basic server framework for XML-RPC
servers written in Python.  Servers can either be free standing, using
SimpleXMLRPCServer, or embedded in a CGI environment, using
CGIXMLRPCRequestHandler.
警告
The xmlrpc.server module is not secure against maliciously
constructed data.  If you need to parse untrusted or unauthenticated data see
XML 漏洞.
Create a new server instance.  This class provides methods for registration of
functions that can be called by the XML-RPC protocol.  The requestHandler
parameter should be a factory for request handler instances; it defaults to
SimpleXMLRPCRequestHandler.  The addr and requestHandler parameters
are passed to the socketserver.TCPServer constructor.  If logRequests
is true (the default), requests will be logged; setting this parameter to false
will turn off logging.   The allow_none and encoding parameters are passed
on to xmlrpc.client and control the XML-RPC responses that will be returned
from the server. The bind_and_activate parameter controls whether
server_bind() and server_activate() are called immediately by the
constructor; it defaults to true. Setting it to false allows code to manipulate
the allow_reuse_address class variable before the address is bound.
The use_builtin_types parameter is passed to the
loads() function and controls which types are processed
when date/times values or binary data are received; it defaults to false.
在 3.3 版更改: The use_builtin_types flag was added.
Create a new instance to handle XML-RPC requests in a CGI environment.  The
allow_none and encoding parameters are passed on to xmlrpc.client
and control the XML-RPC responses that will be returned from the server.
The use_builtin_types parameter is passed to the
loads() function and controls which types are processed
when date/times values or binary data are received; it defaults to false.
在 3.3 版更改: The use_builtin_types flag was added.
Create a new request handler instance.  This request handler supports POST
requests and modifies logging so that the logRequests parameter to the
SimpleXMLRPCServer constructor parameter is honored.
The SimpleXMLRPCServer class is based on
socketserver.TCPServer and provides a means of creating simple, stand
alone XML-RPC servers.
Register a function that can respond to XML-RPC requests.  If name is given,
it will be the method name associated with function, otherwise
function.__name__ will be used.  name is a string, and may contain
characters not legal in Python identifiers, including the period character.
This method can also be used as a decorator.  When used as a decorator,
name can only be given as a keyword argument to register function under
name.  If no name is given, function.__name__ will be used.
在 3.7 版更改: register_function() can be used as a decorator.
Register an object which is used to expose method names which have not been
registered using register_function().  If instance contains a
_dispatch() method, it is called with the requested method name and the
parameters from the request.  Its API is def _dispatch(self, method, params)
(note that params does not represent a variable argument list).  If it calls
an underlying function to perform its task, that function is called as
func(*params), expanding the parameter list. The return value from
_dispatch() is returned to the client as the result.  If instance does
not have a _dispatch() method, it is searched for an attribute matching
the name of the requested method.
If the optional allow_dotted_names argument is true and the instance does not
have a _dispatch() method, then if the requested method name contains
periods, each component of the method name is searched for individually, with
the effect that a simple hierarchical search is performed.  The value found from
this search is then called with the parameters from the request, and the return
value is passed back to the client.
警告
Enabling the allow_dotted_names option allows intruders to access your
module's global variables and may allow intruders to execute arbitrary code on
your machine.  Only use this option on a secure, closed network.
Registers the XML-RPC introspection functions system.listMethods,
system.methodHelp and system.methodSignature.
Registers the XML-RPC multicall function system.multicall.
An attribute value that must be a tuple listing valid path portions of the URL
for receiving XML-RPC requests.  Requests posted to other paths will result in a
404 "no such page" HTTP error.  If this tuple is empty, all paths will be
considered valid. The default value is ('/', '/RPC2').
Server code:
The following client code will call the methods made available by the preceding
server:
register_function() can also be used as a decorator. The previous server
example can register functions in a decorator way:
The following example included in the Lib/xmlrpc/server.py module shows
a server allowing dotted names and registering a multicall function.
警告
Enabling the allow_dotted_names option allows intruders to access your
module's global variables and may allow intruders to execute arbitrary code on
your machine.  Only use this example only within a secure, closed network.
This ExampleService demo can be invoked from the command line:
The client that interacts with the above server is included in
Lib/xmlrpc/client.py:
This client which interacts with the demo XMLRPC server can be invoked as:
The CGIXMLRPCRequestHandler class can be used to handle XML-RPC
requests sent to Python CGI scripts.
Register a function that can respond to XML-RPC requests.  If name is given,
it will be the method name associated with function, otherwise
function.__name__ will be used.  name is a string, and may contain
characters not legal in Python identifiers, including the period character.
This method can also be used as a decorator.  When used as a decorator,
name can only be given as a keyword argument to register function under
name.  If no name is given, function.__name__ will be used.
在 3.7 版更改: register_function() can be used as a decorator.
Register an object which is used to expose method names  which have not been
registered using register_function(). If  instance contains a
_dispatch() method, it is called with the  requested method name and the
parameters from the  request; the return value is returned to the client as the
result. If instance does not have a _dispatch() method, it is searched
for an attribute matching the name of the requested method; if  the requested
method name contains periods, each  component of the method name is searched for
individually,  with the effect that a simple hierarchical search is performed.
The value found from this search is then called with the  parameters from the
request, and the return value is passed  back to the client.
Register the XML-RPC introspection functions  system.listMethods,
system.methodHelp and  system.methodSignature.
Register the XML-RPC multicall function system.multicall.
Handle an XML-RPC request. If request_text is given, it should be the POST
data provided by the HTTP server,  otherwise the contents of stdin will be used.
示例:
These classes extend the above classes to serve HTML documentation in response
to HTTP GET requests.  Servers can either be free standing, using
DocXMLRPCServer, or embedded in a CGI environment, using
DocCGIXMLRPCRequestHandler.
Create a new server instance. All parameters have the same meaning as for
SimpleXMLRPCServer; requestHandler defaults to
DocXMLRPCRequestHandler.
在 3.3 版更改: The use_builtin_types flag was added.
Create a new instance to handle XML-RPC requests in a CGI environment.
Create a new request handler instance. This request handler supports XML-RPC
POST requests, documentation GET requests, and modifies logging so that the
logRequests parameter to the DocXMLRPCServer constructor parameter is
honored.
The DocXMLRPCServer class is derived from SimpleXMLRPCServer
and provides a means of creating self-documenting, stand alone XML-RPC
servers. HTTP POST requests are handled as XML-RPC method calls. HTTP GET
requests are handled by generating pydoc-style HTML documentation. This allows a
server to provide its own web-based documentation.
Set the title used in the generated HTML documentation. This title will be used
inside the HTML "title" element.
Set the name used in the generated HTML documentation. This name will appear at
the top of the generated documentation inside a "h1" element.
Set the description used in the generated HTML documentation. This description
will appear as a paragraph, below the server name, in the documentation.
The DocCGIXMLRPCRequestHandler class is derived from
CGIXMLRPCRequestHandler and provides a means of creating
self-documenting, XML-RPC CGI scripts. HTTP POST requests are handled as XML-RPC
method calls. HTTP GET requests are handled by generating pydoc-style HTML
documentation. This allows a server to provide its own web-based documentation.
Set the title used in the generated HTML documentation. This title will be used
inside the HTML "title" element.
Set the name used in the generated HTML documentation. This name will appear at
the top of the generated documentation inside a "h1" element.
Set the description used in the generated HTML documentation. This description
will appear as a paragraph, below the server name, in the documentation.
xmlrpc.client --- XML-RPC client access
ipaddress --- IPv4/IPv6 操作库
</body></doc>